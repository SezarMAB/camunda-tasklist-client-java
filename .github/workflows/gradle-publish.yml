# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  release:
    types: [created]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
    - name: Build with Gradle
      uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
      with:
        arguments: shadowJar
    - name: debug
      run: |
        echo "${GITHUB_ACTOR} is publishing."
        pwd
        ls ./build/libs/
    - name: Publish
      uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
      with:
        arguments: publish
      env:
        release-version: ${{ github.event.release.tag_name }}
        release-profile: community-action-maven-release
        maven-url: s01.oss.sonatype.org
        MAVEN_USERNAME: ${{ secrets.MAVEN_CENTRAL_DEPLOYMENT_USR }}
        MAVEN_PASSWORD: ${{ secrets.MAVEN_CENTRAL_DEPLOYMENT_PSW }}
        nexus-usr: ${{ secrets.NEXUS_USR }}
        nexus-psw: ${{ secrets.NEXUS_PSW }}
        maven-usr: ${{ secrets.MAVEN_CENTRAL_DEPLOYMENT_USR }}
        maven-psw: ${{ secrets.MAVEN_CENTRAL_DEPLOYMENT_PSW }}
        maven-gpg-passphrase: ${{ secrets.MAVEN_CENTRAL_GPG_SIGNING_KEY_PASSPHRASE }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
    #- name: Attach artifacts to GitHub Release
    #  uses: actions/upload-release-asset@v1
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #  with:
    #   upload_url: ${{ github.event.release.upload_url }}
    #   asset_path: ./build/libs/camunda-tasklist-client-java-${{ github.event.release.tag_name }}.jar
    #   asset_name: camunda-tasklist-client-java-${{ github.event.release.tag_name }}.jar
    #   asset_content_type: application/zip
       


